This app makes it easier to conduct an experiment with the LANL Earthquake Prediction (https://www.kaggle.com/c/LANL-Earthquake-Prediction/) dataset.
Main functions of this app are: explore the dataset (through Exploratory Data Analysis), choose a Machine Learning algorithm and tweak it's parameters, train the selected algorithm and inspect it's performance, test the algorithm on the Kaggle test data, benchmark all models and compare their performance, generate report from these benchmark experiments.
Exploratory Data Analysis:
In the toolbar select the "Help" button and click on the "Explore Dataset" option from the list. A browser window will open that contains a report genereted using the Sweetviz library (https://github.com/fbdesignpro/sweetviz). The report contains detailed descriptive statistics and distribution plots for each feature of the training and test datasets.
Model and parameter selection:
The left side of the main window is dedicated to model and parameter selection. You can choose a Machine Learning model from the dropdown list on the top of the window. Below that list is the "Search for the best parameters" button. By pressing it a background task will start that will try random combinations of possible parameters of the selected model. After this task is finished it will return the best parameters that it found.
Below this button is the model specific parameter selection part of the application, with labels containing the parameter names and an input field for each parameter. The number of these fields varies with each model. After the parameters there is the "Save settings as default" button. This button saves the current values of the parameter input fields as the default parameters for training the model.
Train selected model:
On the right side of the application are the settings for training the currently selected model. You can specify the percentage of the data to be reserved for testing, 0.0 means 0% and 1.0 means 100%. Below that you can specify the number of folds to split the data when training. This must be a positive, odd integer. By selecting the "Upload to Kaggle" option, after training, the app will generate a submission file and if the Kaggle API (https://www.kaggle.com/docs/api) is configured, it will upload the generated subbmission to the Kaggle competition for scoring.
By clicking on the "Start training button" a background process will train the model selected on the left side with the selected parameters. After training is finished, the results will bw displayed in the results section.
The "Benchmark all models" button will start a background task where it will train all the models on the same training data and test them on the separated test data. After this is finished, a new window will appear that will contain the results of the benchmarking in a graphical format. The navigation between the plots can be done by pressing the "<" and the ">" buttons. These plots can be exported by clicking on the "Export plots" button. By clicking the "Generate report" button a report containing all the model parameters and the detailed results of the benchmarking, will be generated and saved to a location specified by the user.
